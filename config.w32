// vim:ft=javascript

ARG_ENABLE('rindow_openblas', 'rindow_openblas support', 'no');

ARG_WITH('openblas', 'openblas support', 'no');

if (PHP_RINDOW_OPENBLAS != 'no') {
  var PHP_RINDOW_OPENBLAS_CFLAGS="\
    /DZEND_ENABLE_STATIC_TSRMLS_CACHE=1 \
    /I" + configure_module_dirname + " \
    /I" + configure_module_dirname + "/include \
  ";
  if(CHECK_HEADER_ADD_INCLUDE("cblas.h", "rindow_openblas", PHP_OPENBLAS + '/build/build/generated')) {
    PHP_RINDOW_OPENBLAS_CFLAGS = PHP_RINDOW_OPENBLAS_CFLAGS + "\
        /I" + PHP_OPENBLAS + "/build \
        /I" + PHP_OPENBLAS + "/build/generated \
    ";
  }
  if(CHECK_HEADER_ADD_INCLUDE("cblas.h", "rindow_openblas", PHP_OPENBLAS + '/include')) {
    PHP_RINDOW_OPENBLAS_CFLAGS = PHP_RINDOW_OPENBLAS_CFLAGS + "\
        /I" + PHP_OPENBLAS + "/include \
    ";
  }

	// Condense whitespace in CFLAGS
  PHP_RINDOW_OPENBLAS_CFLAGS = PHP_RINDOW_OPENBLAS_CFLAGS.replace(/\s+/g, ' ');

  AC_DEFINE('HAVE_RINDOW_OPENBLAS', 1, 'rindow_openblas support enabled');
  AC_DEFINE('OPENBLAS_HAVE_IAMIN', 1, 'openblas have iamin');

  EXTENSION('rindow_openblas', 'rindow_openblas.c', null, PHP_RINDOW_OPENBLAS_CFLAGS);
  ADD_SOURCES(configure_module_dirname + "/src/Rindow/OpenBLAS", "Buffer.c Blas.c Math.c", "rindow_openblas");
  if (CHECK_LIB("openblas.lib", "rindow_openblas", PHP_OPENBLAS + '/build/lib/Release')) {
      ADD_FLAG("LIBS_OPENBLAS", "openblas.lib");
      ADD_FLAG("LDFLAGS", '/libpath:"\\"' + PHP_OPENBLAS + '/build/lib/Release' + '\\"" ');
  }
  if (CHECK_LIB("openblas.lib", "rindow_openblas", PHP_OPENBLAS + '/lib')) {
      ADD_FLAG("LIBS_OPENBLAS", "openblas.lib");
      ADD_FLAG("LDFLAGS", '/libpath:"\\"' + PHP_OPENBLAS + '/lib' + '\\"" ');
  }

}
